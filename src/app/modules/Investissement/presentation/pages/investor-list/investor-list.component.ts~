import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';
import { InvestissementService } from '../../../domain/services/investissement.service';
import { Subject, takeUntil } from 'rxjs';
import {
    MatCell,
    MatCellDef,
    MatColumnDef,
    MatHeaderCell,
    MatHeaderCellDef,
    MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef,
    MatTable,
} from '@angular/material/table';
import { DatePipe, DecimalPipe, NgClass } from '@angular/common';
import { MatIcon } from '@angular/material/icon';
import { MatIconButton } from '@angular/material/button';
import { MatMenu, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';
import { InvestorDetailsComponent } from '../../components/investor-details/investor-details.component';
import { MatDialog } from '@angular/material/dialog';

@Component({
    selector: 'app-investor-list',
    imports: [
        MatTable,
        MatColumnDef,
        MatHeaderCellDef,
        MatHeaderCell,
        MatCell,
        MatCellDef,
        DecimalPipe,

        MatIcon,
        MatHeaderRow,
        MatHeaderRowDef,
        MatRowDef,
        MatRow,
        MatIconButton,
        DatePipe,
        MatMenu,
        MatMenuTrigger,
        MatMenuItem,
    ],
    templateUrl: './investor-list.component.html',
    standalone: true,
    styleUrl: './investor-list.component.scss',
    changeDetection: ChangeDetectionStrategy.OnPush,
})
export class InvestorListComponent implements OnInit , OnDestroy{
    columns: string[] = [
        'ref',
        'investorName',
        'amount',
        'description',
        'email',
        'typeId',
        'date',
        'actions',
    ];
    data: any;
    private _unsubscribeAll: Subject<any> = new Subject<any>();

    constructor(
        private _investissementService: InvestissementService,
        private cdr: ChangeDetectorRef,
        private dialog:MatDialog,

    )
    {
    }


    ngOnInit(): void {
        this._investissementService.data$
            .pipe(takeUntil(this._unsubscribeAll))
            .subscribe((data) =>
            {

                this.data = data.content;
                console.log("the component notified success",this.data)
                this.cdr.markForCheck();


            });
    }
    ngOnDestroy(): void
    {
        // Unsubscribe from all subscriptions
        this._unsubscribeAll.next(null);
        this._unsubscribeAll.complete();
    }

    exportAsCSV() {
        this._investissementService.exportCsv();

    }

    exportAsExcel() {
        this._investissementService.exportExcel();

    }

    exportAsPDF() {
        this._investissementService.exportPdf();

    }

    openInvestorDetails(row) {
        console.log(row);
        this.dialog.open(InvestorDetailsComponent, {
            data: row,
            panelClass: 'custom-modal-panel',
        });
    }
}
